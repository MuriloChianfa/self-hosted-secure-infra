server default {
    listen {
        type = auth

        ipaddr = *
        port = 0
    	#interface = eth0
        #proto = tcp

        limit {
            max_connections = 16
            lifetime = 60
            idle_timeout = 30
        }
    }

    listen {
        type = acct

        ipaddr = *
        port = 0
    	#interface = eth0
        #proto = tcp

        limit {
    		idle_timeout = 30
    		lifetime = 60
    		max_connections = 16
        }
    }

    listen {
        type = auth

        ipv6addr = ::
        port = 0
    	#interface = eth0

        limit {
            max_connections = 16
            lifetime = 0
            idle_timeout = 30
        }
    }

    listen {
        type = acct

        ipv6addr = ::
        port = 0
    	#interface = eth0

        limit {
    		max_connections = 16
    		lifetime = 60
    		idle_timeout = 30
        }
    }

    authorize {
        filter_username

        preprocess

        chap

        mschap

        digest

        suffix
        eap {
            ok = return
        }

        files

        -sql

        ldap
        if ((ok || updated) && User-Password && !control:Auth-Type) {
            update {
                control:Auth-Type := ldap
            }
        }

        expiration
        logintime
    }

    authenticate {
        Auth-Type LDAP {
            ldap
        }

        Auth-Type CHAP {
            chap
        }

        Auth-Type MS-CHAP {
            mschap
        }

        mschap

        digest

        eap
    }

    preacct {
        preprocess

        acct_unique

        suffix

        files
    }

    accounting {
        detail

        unix

        -sql

        exec

        attr_filter.accounting_response
    }

    post-auth {
        if (session-state:User-Name && reply:User-Name && request:User-Name && (reply:User-Name == request:User-Name)) {
            update reply {
                &User-Name !* ANY
            }
        }
        update {
            &reply: += &session-state:
        }

        -sql

        exec

        remove_reply_message_if_eap

        Post-Auth-Type REJECT {
            -sql
            attr_filter.access_reject

            eap

            remove_reply_message_if_eap
        }

        Post-Auth-Type Challenge {
            #
        }
    }

    pre-proxy {
        #
    }
    post-proxy {
        eap
    }
}